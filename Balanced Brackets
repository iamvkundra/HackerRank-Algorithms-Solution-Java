import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.Stack;
public class Solution {
    public static boolean check(char top, char ch)
    {
        if(top == '(' && ch == ')' || top == '{' && ch == '}')
        {
            return true;
        }
        if(top == '[' && ch == ']')
        {
            return true;
        }

       return false;

    }
    static String isBalanced(String s) {
       
        if(s.charAt(0) == ')' || s.charAt(0) == '}' || s.charAt(0) == ']')
        {
            return "NO";
        }
        Stack<Character> st = new Stack<Character>();
        for(int i =0;i<s.length();i++)
        {
            if(s.charAt(i)=='(' || s.charAt(i) =='{' || s.charAt(i) == '[')
            {
                st.push(s.charAt(i));
            }
            else
            {
                if(st.isEmpty())
                {
                    return "NO";
                }
                char top = st.peek();
                if(check(top, s.charAt(i)))
                {
                    st.pop();
                }
                else
                {
                    return "NO";
                }
            }
            
        }
        if(st.isEmpty())
            {
                return "YES";
            }
            else
            {
                return "NO";
            }


    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            String s = scanner.nextLine();

            String result = isBalanced(s);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
